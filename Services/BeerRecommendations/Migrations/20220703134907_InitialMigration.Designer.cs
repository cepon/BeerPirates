// <auto-generated />
using System;
using BeerRecommendations.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeerRecommendations.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220703134907_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BeerRecommendations.Database.BeerRecommendation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("BeerRecommendations");
                });

            modelBuilder.Entity("BeerRecommendations.Database.BeerRecommendationProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<int>("BeerRecommendationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeerRecommendationId");

                    b.ToTable("BeerRecommendationProducts");
                });

            modelBuilder.Entity("BeerRecommendations.Database.BeerRecommendationProduct", b =>
                {
                    b.HasOne("BeerRecommendations.Database.BeerRecommendation", "BeerRecommendation")
                        .WithMany("Products")
                        .HasForeignKey("BeerRecommendationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeerRecommendation");
                });

            modelBuilder.Entity("BeerRecommendations.Database.BeerRecommendation", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
